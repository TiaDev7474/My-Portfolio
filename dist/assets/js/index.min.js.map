{"version":3,"sources":["animation.js","expertise.js","project.js"],"names":["document","querySelector","classList","add","addEventListener","setTimeout","remove","expertiseData","title","icon","description","initialize","fetch","then","response","json","data","insertData","catch","error","console","log","cards","innerHTML","forEach","projects","item","stacks","stack","img","name","github","link","filteredData","filter","type","toLower","filters","querySelectorAll","removeAllClassFromNode","classToRemove","node","e","target","attributes","value","filterType","err"],"mappings":"AAEAA,SAAAC,cAAA,WAAAC,UAAAC,IAAA,UAGAH,SAAAI,iBAAA,oBAAA,KACAC,YAAA,KACAL,SAAAC,cAAA,WAAAC,UAAAI,OAAA,UACAN,SAAAC,cAAA,YAAAC,UAAAI,OAAA,eAAA,GACA,IAAA,ICPA,MAAAC,cAAA,CACA,CAEAC,MAAA,kBACAC,KAAA,YACAC,YAAA,4JAGA,CAEAF,MAAA,eACAC,KAAA,YACAC,YAAA,4JAGA,CAEAF,MAAA,qBACAC,KAAA,YACAC,YAAA,6JCpBA,SAAAC,aACAC,MAAA,yBACAC,MAAAC,GAAAA,EAAAC,SACAF,MAAAG,IACAC,WAAAD,EAAA,IAEAE,OAAAC,IACAC,QAAAC,IAAAF,EAAA,GAEA,CDoBAnB,SAAAI,iBAAA,oBAAA,KACA,MAAAkB,EAAAtB,SAAAC,cAAA,UAEAqB,EAAAC,UAAA,GACAhB,cAAAiB,SAAAR,IACAM,EAAAC,WAAA,0KAEAP,EAAAP,qPAIAO,EAAAR,gLAGAQ,EAAAN,uJAAA,GAIA,ICnCAC,aACA,MAAAM,WAAAD,IACA,MAAAS,EAAAzB,SAAAC,cAAA,oBACAwB,EAAAF,UAAA,GACAP,EAAAQ,SAAAE,IACA,IAAAC,EAAA,GACAD,EAAAC,OAAAH,SAAAI,IACAD,GAAA,2BAAAC,6BAAA,IAGAH,EAAAF,WAAA,wJAIAG,EAAAG,oOAKAH,EAAAI,wGAEAJ,EAAAK,iuFAkBAL,EAAAM,0gGASAL,mGAAA,GAKA,EAGAM,aAAA,CAAAjB,EAAAkB,IACAlB,EAAAkB,QAAAlB,GAAAA,EAAAmB,KAAAC,WAAAF,EAAAE,YAEAC,QAAArC,SAAAsC,iBAAA,gBACA,SAAAC,uBAAAC,GACAH,QAAAb,SAAAiB,IACAA,EAAAvC,UAAAI,OAAAkC,EAAA,GAEA,CAEAH,QAAAb,SAAAU,IACAA,EAAA9B,iBAAA,SAAAsC,IACAH,uBAAA,sBACAG,EAAAC,OAAAzC,UAAAC,IAAA,sBACAiB,QAAAC,IAAAqB,EAAAC,OAAAC,WAAA,KAAAC,OACA,MAAAC,EAAAJ,EAAAC,OAAAC,WAAA,KAAAC,MACAjC,MAAA,yBACAC,MAAAC,GAAAA,EAAAC,SACAF,MAAAG,IACA,MAAAiB,EAAAA,EAAAjB,EAAA8B,GACA7B,WAAAgB,EAAA,IAGAf,OAAA6B,IACA3B,QAAAC,IAAA0B,EAAA,GACA,GAKA","file":"index.min.js","sourcesContent":["\n(function(){\n    document.querySelector('#loader').classList.add('loader');\n    \n\n    document.addEventListener('DOMContentLoaded',()=>{\n         setTimeout(() =>{\n            document.querySelector('#loader').classList.remove('loader'); \n            document.querySelector('.overlay').classList.remove('overlay-hide');\n         },2000)\n    })\n})()\n","\n\nconst expertiseData = [\n    {\n\n        title:'Web development',\n        icon:'Globe.svg',\n        description:' Lorem, ipsum dolor sit amet consectetur adipisicing elit.Dolore, dignissimos? Consequatur repellat quos mollitia fuga eaque recusandae similique nisi? '\n        \n    },\n    {\n\n        title:'UI/UX DESIGN',\n        icon:'Globe.svg',\n        description:' Lorem, ipsum dolor sit amet consectetur adipisicing elit.Dolore, dignissimos? Consequatur repellat quos mollitia fuga eaque recusandae similique nisi? '\n        \n    },\n    {\n\n        title:'Mobile development',\n        icon:'Globe.svg',\n        description:' Lorem, ipsum dolor sit amet consectetur adipisicing elit.Dolore, dignissimos? Consequatur repellat quos mollitia fuga eaque recusandae similique nisi? '\n        \n    },\n  \n]\n\n \n\n\ndocument.addEventListener('DOMContentLoaded',() =>{\n    const cards = document.querySelector('.cards');\n\n    cards.innerHTML = \"\";\n    expertiseData.forEach(data => {\n           cards.innerHTML += `<div class=\"cards-item\">\n                                        <span style=\"color: white;\">\n                                            <img  src=\"./assets/images/${data.icon}\" alt=\"icon__description\"/> \n                                        </span>\n                                        <div>\n                                            <h3 class=\"title\">\n                                                ${data.title}\n                                            </h3>\n                                            <p class=\"paragraph\">\n                                                ${data.description}\n                                            </p>\n                                        </div>\n                                </div>`\n    });\n    \n\n})","\nfunction initialize() {\n    fetch('../data/projects.json')\n    .then(response => response.json())\n    .then(data => {\n          insertData(data)\n    }) \n    .catch(error => {\n       console.log(error)\n  })\n }\n\n\ninitialize()\nconst insertData = (data) => {\n      const projects = document.querySelector('.project-content')\n      projects.innerHTML=''\n      data.forEach( item => {\n            let stacks = \"\"\n            item.stacks.forEach(stack =>{\n                   stacks += `<li class=\"stacks-item\">${stack}</li>\n                   `\n            })\n            projects.innerHTML += `\n            \n      <div class=\"project-item\">\n            <figure class=\"img-container\">\n                <img  class=\"img\" src=\"./assets/images/${item.img}\" alt=\"250\" >\n            </figure>\n            <div class=\"description\">\n                  <div class=\"description-content\">\n                        <div class=\"header\">\n                            <h3 class=\"title\">${item.name}</h3>\n                            <div class=\"links\">\n                                <a  href=${item.github} class=\"link\">\n                                      <svg width=\"35\" height=\"32\" viewBox=\"0 -3 19 19\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n                                              <title>code [#1115]</title>\n                                              <desc>Created with Sketch.</desc>\n                                              <defs>\n                                          \n                                          </defs>\n                                              <g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n                                                  <g id=\"Dribbble-Light-Preview\" transform=\"translate(-180.000000, -3283.000000)\" fill=\"#f2f2f2\">\n                                                      <g id=\"icons\" transform=\"translate(56.000000, 160.000000)\">\n                                                          <path d=\"M129.204085,3126.419 C129.587463,3126.032 129.587463,3125.405 129.204085,3125.018 L129.191207,3125.005 C128.807829,3124.618 128.186697,3124.618 127.803319,3125.005 L124.287534,3128.553 C123.904155,3128.94 123.904155,3129.568 124.287534,3129.955 L127.803319,3133.503 C128.186697,3133.89 128.807829,3133.89 129.191207,3133.503 L129.204085,3133.49 C129.587463,3133.103 129.587463,3132.476 129.204085,3132.089 L127.090057,3129.955 C126.706679,3129.568 126.706679,3128.94 127.090057,3128.553 L129.204085,3126.419 Z M142.712466,3128.553 L139.196681,3125.005 C138.814294,3124.618 138.192171,3124.618 137.808793,3125.005 L137.795915,3125.018 C137.412537,3125.405 137.412537,3126.032 137.795915,3126.419 L139.910934,3128.553 C140.294312,3128.94 140.294312,3129.568 139.910934,3129.955 L137.795915,3132.089 C137.412537,3132.476 137.412537,3133.103 137.795915,3133.49 L137.808793,3133.503 C138.192171,3133.89 138.814294,3133.89 139.196681,3133.503 L142.712466,3129.955 C143.095845,3129.568 143.095845,3128.94 142.712466,3128.553 L142.712466,3128.553 Z M136.809359,3124.40817 L131.74698,3135.23866 C131.582981,3135.57915 131.295245,3136 130.924037,3136 L130.904396,3136 C130.182602,3136 129.712209,3135.0197 130.031369,3134.3588 L135.064287,3123.63077 C135.228287,3123.29128 135.836165,3123.02511 135.836165,3123.02511 L135.836165,3123 C136.818198,3123 137.127538,3123.74728 136.809359,3124.40817 L136.809359,3124.40817 Z\" id=\"code-[#1115]\">\n                                          \n                                          </path>\n                                                      </g>\n                                                  </g>\n                                              </g>\n                                      </svg>\n                                </a>\n                                <a  href=${item.link} class=\"link\">\n                                    <svg width=\"30\" height=\"28\" viewBox=\"0 0 30 38\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                      <path d=\"M16.2575 29.8566C16.4253 30.06 16.5584 30.3016 16.6493 30.5677C16.7401 30.8338 16.7869 31.119 16.7869 31.4071C16.7869 31.6952 16.7401 31.9805 16.6493 32.2466C16.5584 32.5127 16.4253 32.7543 16.2575 32.9577L15.3666 34.0412C13.6785 36.0945 11.3889 37.248 9.00157 37.248C6.61421 37.248 4.32462 36.0945 2.6365 34.0412C0.948377 31.988 0 29.2032 0 26.2995C0 23.3957 0.948377 20.6109 2.6365 18.5577L6.25397 14.1596C7.87596 12.1819 10.0583 11.0334 12.3539 10.9493C14.6496 10.8652 16.8848 11.8518 18.6017 13.7072C18.7789 13.8988 18.9234 14.1311 19.0269 14.3906C19.1304 14.6502 19.1908 14.932 19.2047 15.22C19.2186 15.5079 19.1858 15.7964 19.1081 16.0689C19.0303 16.3415 18.9092 16.5927 18.7516 16.8083C18.5941 17.0239 18.4032 17.1996 18.1897 17.3255C17.9763 17.4513 17.7447 17.5248 17.5079 17.5418C17.2711 17.5587 17.034 17.5188 16.8099 17.4242C16.5858 17.3297 16.3793 17.1824 16.202 16.9907C15.1724 15.8786 13.8324 15.2869 12.456 15.3367C11.0797 15.3866 9.77095 16.0742 8.7976 17.2589L5.18313 21.6515C4.17041 22.8832 3.60148 24.5538 3.60148 26.2958C3.60148 28.0378 4.17041 29.7084 5.18313 30.9401C6.19584 32.1719 7.56938 32.8639 9.00157 32.8639C10.4338 32.8639 11.8073 32.1719 12.82 30.9401L13.7109 29.8566C13.878 29.6531 14.0765 29.4916 14.295 29.3814C14.5135 29.2713 14.7477 29.2146 14.9842 29.2146C15.2207 29.2146 15.4549 29.2713 15.6734 29.3814C15.8919 29.4916 16.0904 29.6531 16.2575 29.8566ZM27.3679 3.95337C25.6784 1.90328 23.3893 0.751953 21.0028 0.751953C18.6163 0.751953 16.3272 1.90328 14.6377 3.95337L13.7469 5.03692C13.4088 5.44815 13.2188 6.0059 13.2188 6.58747C13.2188 7.16904 13.4088 7.72678 13.7469 8.13801C14.085 8.54924 14.5435 8.78027 15.0217 8.78027C15.4998 8.78027 15.9584 8.54924 16.2965 8.13801L17.1874 7.05446C18.2001 5.8227 19.5736 5.13071 21.0058 5.13071C22.438 5.13071 23.8116 5.8227 24.8243 7.05446C25.837 8.28621 26.4059 9.95683 26.4059 11.6988C26.4059 13.4408 25.837 15.1114 24.8243 16.3431L21.2083 20.743C20.2341 21.9272 18.9247 22.6138 17.5479 22.6623C16.1712 22.7108 14.8313 22.1175 13.8024 21.0039C13.6251 20.8122 13.4186 20.6649 13.1945 20.5704C12.9704 20.4758 12.7332 20.4359 12.4965 20.4528C12.2597 20.4698 12.028 20.5433 11.8146 20.6691C11.6012 20.795 11.4103 20.9707 11.2527 21.1863C11.0952 21.4019 10.9741 21.6531 10.8963 21.9257C10.8186 22.1982 10.7858 22.4867 10.7997 22.7746C10.8136 23.0626 10.874 23.3444 10.9775 23.604C11.081 23.8635 11.2255 24.0958 11.4027 24.2874C13.1184 26.1423 15.3521 27.1296 17.6467 27.0472C19.9413 26.9648 22.1232 25.819 23.7459 23.8441L27.3634 19.446C29.0509 17.3916 29.9992 14.6067 30 11.7027C30.0008 8.79864 29.0542 6.01289 27.3679 3.95701V3.95337Z\" fill=\"white\"/>\n                                    </svg>\n                                </a>\n                            </div>\n                        </div>\n                       \n                        <ul class=\"stacks\">\n                            ${stacks}\n                        </ul>\n                  </div>\n              </div>\n         </div>`\n      });\n}\n\nconst filteredData = (data , filter) =>{\n       return data.filter(data => data.type.toLower() == filter.toLower())\n}\nconst filters = document.querySelectorAll('.filter-item')\nfunction removeAllClassFromNode(classToRemove){\n      filters.forEach(node =>{\n           node.classList.remove(classToRemove)\n      })\n}\n\nfilters.forEach( filter => {\n     filter.addEventListener('click',(e)=> {\n        removeAllClassFromNode('filter-item-active')\n        e.target.classList.add('filter-item-active')\n        console.log(e.target.attributes['data'].value)\n        const filterType=e.target.attributes['data'].value\n        fetch('../data/projects.json')\n            .then(response => response.json())\n            .then(data => {\n                const filteredData = filteredData(data,filterType)\n                insertData(filteredData)\n                \n            }) \n            .catch(err =>{\n                console.log(err)\n            })\n         \n        \n\n        \n     })\n})"]}